{"version":3,"file":"clogy.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5b0398192211bb2d0a22","webpack:///src/constants/loggingLevels.js","webpack:///src/constants/loggingDefaultOptions.js","webpack:///src/constants/loggingMethods.js","webpack:///src/index.js","webpack:///src/main/Clogy.js","webpack:///src/main/Logger.js","webpack:///src/utilities/logging.js","webpack:///src/utilities/singleton.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"clogy\"] = factory();\n\telse\n\t\troot[\"clogy\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5b0398192211bb2d0a22\n **/","export default {\n  get types() {\n    return {\n      log: 1,\n      trace: 2,\n      debug: 3,\n      info: 4,\n      warn: 5,\n      error: 6,\n      none: 7\n    };\n  },\n  get range() {\n    return {\n      min: this.types.log,\n      max: this.types.none\n    };\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/constants/loggingLevels.js\n **/","export default {\n  showDateTime: false,\n  prefix: ''\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/constants/loggingDefaultOptions.js\n **/","export default ['log', 'trace', 'debug', 'info', 'warn', 'error'];\n\n\n\n/** WEBPACK FOOTER **\n ** src/constants/loggingMethods.js\n **/","import Clogy from './main/Clogy';\n\nconst clogy = new Clogy();\n\nexport default clogy;\n\n// Because of Babel@6\n// Can use plugin: https://www.npmjs.com/package/babel-plugin-add-module-exports\n// Used this soln. instead:\n// http://stackoverflow.com/questions/34736771/webpack-umd-library-return-object-default/34778391#34778391\nmodule.exports = clogy;\n\n\n\n/** WEBPACK FOOTER **\n ** src/index.js\n **/","import singleton from '../utilities/singleton';\nimport Logger from './Logger';\n\nclass Clogy extends Logger {\n  noConflict() {\n\n    // No need of ===, typeof returns a string\n    if (typeof(window) != 'undefined' && window.clogy) {\n\n      // it will be deleted because clogy is not a variable, but\n      // a property of the global object i.e. window;\n      // check yourself ('clogy' in window) -> false after deletion\n      delete window.clogy;\n    }\n\n    return this;\n  }\n\n  decorator(decoFunc) {\n\n    // No need of ===, typeof returns a string\n    if (typeof(decoFunc) != 'function') {\n      throw new TypeError('Decorator should be a function');\n    }\n\n    decoFunc(singleton.getInstance(this));\n  }\n}\n\n// JS hoisting will not work with Classes\nexport default Clogy;\n\n\n\n/** WEBPACK FOOTER **\n ** src/main/Clogy.js\n **/","import LOGGING_LEVELS from '../constants/loggingLevels';\nimport LOGGING_DEFAULT_OPTIONS from '../constants/loggingDefaultOptions';\nimport LOGGING_METHODS from '../constants/loggingMethods';\nimport logging from '../utilities/logging';\n\nclass Logger {\n  constructor() {\n    this._level = null;\n    this.options = {};\n\n    this._init();\n  }\n\n  _init() {\n\n    // Set default log level\n    this.setLevel(LOGGING_LEVELS.types.info);\n\n    ({\n      showDateTime: this.options.showDateTime,\n      prefix: this.options.prefix\n    } = LOGGING_DEFAULT_OPTIONS);\n  }\n\n  getLevel() {\n    return this._level;\n  }\n\n  setLevel(logLevel) {\n    let _logLevel = logLevel;\n\n    // No need of ===, typeof returns a string\n    if (typeof(_logLevel) == 'string') {\n      _logLevel = LOGGING_LEVELS.types[_logLevel.toLowerCase()];\n    }\n\n    // No need to check if log level is less or more than min and max or invalid\n    // Will be handled when logging\n    this._level = _logLevel;\n  }\n\n  get LEVELS() {\n    return LOGGING_LEVELS.types;\n  }\n\n  enableAllLevels() {\n    this.setLevel(LOGGING_LEVELS.types.log);\n  }\n\n  disableAllLevels() {\n    this.setLevel(LOGGING_LEVELS.types.none);\n  }\n}\n\n////////////////////////\n\nLOGGING_METHODS.forEach((method) => {\n\n  // Not using arrow functions because 'this' will be undefined\n  // (Arrow functions capture the this value of the enclosing context)\n  Logger.prototype[method] = function(...args) {\n    const logToConsoleParams = {\n      currentLogLevel: this.getLevel(),\n      loggingType: method,\n      options: this.options\n    };\n\n    logging.logToConsole(logToConsoleParams, args);\n  };\n});\n\n////////////////////////\n\n// JS hoisting will not work with Classes\nexport default Logger;\n\n\n\n/** WEBPACK FOOTER **\n ** src/main/Logger.js\n **/","import LOGGING_LEVELS from '../constants/loggingLevels';\n\nconst DEFAULT_LOGGING_TYPE = 'log';\n\n// I prefer default export rather than named export\nexport default {\n  logToConsole\n};\n\n////////////////////////\n\nfunction isConsoleDefined() {\n\n  // No need of ===, typeof returns a string\n  return typeof(console) != 'undefined';\n}\n\nfunction isLogLevelValid(currentLogLevel) {\n  return !!(\n    currentLogLevel &&\n    currentLogLevel >= LOGGING_LEVELS.range.min &&\n    currentLogLevel <= LOGGING_LEVELS.range.max\n  );\n}\n\nfunction isNoneLogLevel(currentLogLevel) {\n  return currentLogLevel === LOGGING_LEVELS.types.none;\n}\n\nfunction isLoggingAllowed(currentLogLevel, loggingType) {\n  return (\n    LOGGING_LEVELS.types[loggingType] >= currentLogLevel\n  );\n}\n\nfunction getDateTime() {\n  const d = new Date();\n  const date = d.toDateString();\n\n  // 0 means first matched string, which will be true always unless someone\n  // overrides the result\n  const time = d.toTimeString().match(/^([0-9]{2}:[0-9]{2}:[0-9]{2})/)[0];\n\n  // NOTE: hey..!! see, 3 is not a magic number, if you think it is, then\n  // it's just milliseconds in 3 digits (000-999)\n  const appendMilliseconds = `00${d.getMilliseconds()}`.slice(-3);\n\n  return `${date} ${time}.${appendMilliseconds}`;\n}\n\nfunction justLogItDude(loggingType, args) {\n  const consoleLoggingType = console[loggingType] || console[DEFAULT_LOGGING_TYPE];\n\n  // No need of ===, typeof returns a string\n  if (typeof(consoleLoggingType) != 'function') {\n\n    // I don't want to break an application if someone intentionally\n    // deleted the methods, so skipping error here\n    return;\n  }\n\n  Function.prototype.bind.call(consoleLoggingType, console).apply(console, args);\n}\n\n// Functional style programming;\n// No mutating params, no state known beforehand\nfunction logToConsole(logToConsoleParams, args) {\n  if (!isConsoleDefined()) {\n    return;\n  }\n\n  const { currentLogLevel, loggingType, options = {} } = logToConsoleParams;\n\n  if (!isLogLevelValid(currentLogLevel)) {\n    throw new RangeError('Invalid LogLevel set, Please set a valid LogLevel');\n  }\n\n  if (\n    isNoneLogLevel(currentLogLevel) ||\n    !isLoggingAllowed(currentLogLevel, loggingType)\n  ) {\n    return;\n  }\n\n  /////////////////////////////////////////////\n  const consoleOptions = [];\n\n  if (options.showDateTime) {\n\n    // Better readability than consoleOptions[consoleOptions.length] = value\n    consoleOptions.push(`${getDateTime()}: `);\n  }\n\n  if (options.prefix) {\n    consoleOptions.push(options.prefix);\n  }\n\n  justLogItDude(loggingType, [...consoleOptions, ...args]);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** src/utilities/logging.js\n **/","let instance;\n\n// I prefer default export rather than named export\nexport default {\n  getInstance\n};\n\n////////////////////////\n\nfunction createInstance(originalInstance) {\n  return Object.getPrototypeOf(Object.getPrototypeOf(originalInstance));\n}\n\nfunction getInstance(originalInstance) {\n  // No need to go deep into proto chain again\n  if (!instance) {\n    instance = createInstance(originalInstance);\n  }\n  return instance;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** src/utilities/singleton.js\n **/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAjBA;;;;;;;;;ACAA;AACA;AACA;AAFA;;;;;;;;;ACAA;;;;;;;;;;ACAA;AACA;;;;;AACA;AACA;AACA;AACA;;;;;;AAKA;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;;;;;;;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;;;;;;AC9BA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;AACA;AACA;;;;;;;;AAaA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAHA;AACA;AAFA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;;AC1EA;AACA;;;;;AACA;AACA;;AAEA;AACA;AADA;AACA;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjGA;AACA;;AAEA;AACA;AADA;AACA;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;","sourceRoot":""}