{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///clogy.min.js","webpack:///webpack/bootstrap 8d4da782a80e9ed00147","webpack:///./src/constants/globalConstants.js","webpack:///./src/index.js","webpack:///./src/utilities/globalUtilities.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","loggingLevels","types","log","trace","debug","info","warn","error","none","range","min","max","options","showDateTime","prefix","methods","_interopRequireDefault","obj","__esModule","default","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_globalConstants","_globalConstants2","_globalUtilities","_globalUtilities2","Loggers","forEach","method","logToConsoleParams","currentLogLevel","getLevel","loggingType","_len","arguments","args","Array","_key","logToConsole","Clogy","_Loggers","_this","getPrototypeOf","_level","_init","setLevel","_GLOBAL_CONSTANTS$opt","logLevel","_logLevel","toLowerCase","decoFunc","singelton","getInstance","get","clogy","noConflict","window","_toConsumableArray","arr","isArray","arr2","from","createInstance","originalInstance","isLogLevelValid","isNoneLogLevel","isLoggingAllowed","isConsoleDefined","console","getDateTime","d","Date","date","toDateString","time","toTimeString","match","appendMilliseconds","getMilliseconds","slice","justLogItDude","consoleLoggingType","DEFAULT_LOGGING_TYPE","Function","bind","apply","_logToConsoleParams$o","undefined","RangeError","consoleOptions","push","concat"],"mappings":"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","file":"clogy.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"clogy\"] = factory();\n\telse\n\t\troot[\"clogy\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"clogy\"] = factory();\n\telse\n\t\troot[\"clogy\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(2);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  get loggingLevels() {\n\t    return {\n\t      types: {\n\t        log: 1,\n\t        trace: 2,\n\t        debug: 3,\n\t        info: 4,\n\t        warn: 5,\n\t        error: 6,\n\t        none: 7\n\t      },\n\t      get range() {\n\t        return {\n\t          min: this.types.log,\n\t          max: this.types.none\n\t        };\n\t      }\n\t    };\n\t  },\n\t  options: {\n\t    showDateTime: false,\n\t    prefix: ''\n\t  },\n\t  methods: ['log', 'trace', 'debug', 'info', 'warn', 'error']\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _globalConstants = __webpack_require__(1);\n\t\n\tvar _globalConstants2 = _interopRequireDefault(_globalConstants);\n\t\n\tvar _globalUtilities = __webpack_require__(3);\n\t\n\tvar _globalUtilities2 = _interopRequireDefault(_globalUtilities);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar Loggers = function Loggers() {\n\t  _classCallCheck(this, Loggers);\n\t};\n\t\n\t_globalConstants2.default.methods.forEach(function (method) {\n\t\n\t  // Not using arrow functions because 'this' will be undefined\n\t  // (Arrow functions capture the this value of the enclosing context)\n\t  Loggers.prototype[method] = function () {\n\t    var logToConsoleParams = {\n\t      currentLogLevel: this.getLevel(),\n\t      loggingType: method,\n\t      options: this.options\n\t    };\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    _globalUtilities2.default.logToConsole(logToConsoleParams, args);\n\t  };\n\t});\n\t////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar Clogy = function (_Loggers) {\n\t  _inherits(Clogy, _Loggers);\n\t\n\t  function Clogy() {\n\t    _classCallCheck(this, Clogy);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Clogy).call(this));\n\t\n\t    _this._level = null;\n\t    _this.options = {};\n\t\n\t    _this._init();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Clogy, [{\n\t    key: '_init',\n\t    value: function _init() {\n\t\n\t      // Set default log level\n\t      this.setLevel(_globalConstants2.default.loggingLevels.types.info);\n\t\n\t      var _GLOBAL_CONSTANTS$opt = _globalConstants2.default.options;\n\t      this.options.showDateTime = _GLOBAL_CONSTANTS$opt.showDateTime;\n\t      this.options.prefix = _GLOBAL_CONSTANTS$opt.prefix;\n\t    }\n\t  }, {\n\t    key: 'getLevel',\n\t    value: function getLevel() {\n\t      return this._level;\n\t    }\n\t  }, {\n\t    key: 'setLevel',\n\t    value: function setLevel(logLevel) {\n\t      var _logLevel = logLevel;\n\t\n\t      // No need of ===, typeof returns a string\n\t      if (typeof _logLevel == 'string') {\n\t        _logLevel = _globalConstants2.default.loggingLevels.types[_logLevel.toLowerCase()];\n\t      }\n\t\n\t      // No need to check if log level is less or more than min and max or invalid\n\t      // Will be handled when logging\n\t      this._level = _logLevel;\n\t    }\n\t  }, {\n\t    key: 'enableAllLevels',\n\t    value: function enableAllLevels() {\n\t      this.setLevel(_globalConstants2.default.loggingLevels.types.log);\n\t    }\n\t  }, {\n\t    key: 'disableAllLevels',\n\t    value: function disableAllLevels() {\n\t      this.setLevel(_globalConstants2.default.loggingLevels.types.none);\n\t    }\n\t  }, {\n\t    key: 'decorator',\n\t    value: function decorator(decoFunc) {\n\t\n\t      // No need of ===, typeof returns a string\n\t      if (typeof decoFunc != 'function') {\n\t        throw new TypeError('Decorator handler should be a function');\n\t      }\n\t\n\t      decoFunc(_globalUtilities2.default.singelton.getInstance(this));\n\t    }\n\t  }, {\n\t    key: 'LEVELS',\n\t    get: function get() {\n\t      return _globalConstants2.default.loggingLevels.types;\n\t    }\n\t  }]);\n\t\n\t  return Clogy;\n\t}(Loggers);\n\t\n\tvar clogy = new Clogy();\n\t\n\t////////////////////////////////////////////////////////////////////////////////\n\t/* clogy Methods only*/\n\t\n\t// Not using arrow functions because 'this' will be undefined\n\t// (Arrow functions capture the this value of the enclosing context)\n\tclogy.noConflict = function () {\n\t\n\t  // No need of ===, typeof returns a string\n\t  if (typeof window != 'undefined' && window.clogy) {\n\t\n\t    // it will be deleted because clogy is not a variable, but\n\t    // a property of the global object i.e. window;\n\t    // check yourself ('clogy' in window) -> false after deletion\n\t    delete window.clogy;\n\t  }\n\t\n\t  return this;\n\t};\n\t////////////////////////////////////////////////////////////////////////////////\n\t\n\texports.default = clogy;\n\t\n\t// Because of Babel@6\n\t// Can use plugin: https://www.npmjs.com/package/babel-plugin-add-module-exports\n\t// Used this soln. instead:\n\t// http://stackoverflow.com/questions/34736771/webpack-umd-library-return-object-default/34778391#34778391\n\t\n\tmodule.exports = clogy;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _globalConstants = __webpack_require__(1);\n\t\n\tvar _globalConstants2 = _interopRequireDefault(_globalConstants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar singelton = function () {\n\t  var instance = void 0;\n\t\n\t  function createInstance(originalInstance) {\n\t    return Object.getPrototypeOf(Object.getPrototypeOf(originalInstance));\n\t  }\n\t\n\t  return {\n\t    getInstance: function getInstance(originalInstance) {\n\t      if (!instance) {\n\t        instance = createInstance(originalInstance);\n\t      }\n\t      return instance;\n\t    }\n\t  };\n\t}();\n\t\n\tvar logToConsole = function () {\n\t  var DEFAULT_LOGGING_TYPE = 'log';\n\t\n\t  function isLogLevelValid(currentLogLevel) {\n\t    return !!(currentLogLevel && currentLogLevel >= _globalConstants2.default.loggingLevels.range.min && currentLogLevel <= _globalConstants2.default.loggingLevels.range.max);\n\t  }\n\t\n\t  function isNoneLogLevel(currentLogLevel) {\n\t    return currentLogLevel === _globalConstants2.default.loggingLevels.types.none;\n\t  }\n\t\n\t  function isLoggingAllowed(currentLogLevel, loggingType) {\n\t    return _globalConstants2.default.loggingLevels.types[loggingType] >= currentLogLevel;\n\t  }\n\t\n\t  function isConsoleDefined() {\n\t\n\t    // No need of ===, typeof returns a string\n\t    return typeof console != 'undefined';\n\t  }\n\t\n\t  function getDateTime() {\n\t    var d = new Date();\n\t    var date = d.toDateString();\n\t\n\t    // 0 means first matched string, which will be true always unless someone\n\t    // overrides the result\n\t    var time = d.toTimeString().match(/^([0-9]{2}:[0-9]{2}:[0-9]{2})/)[0];\n\t\n\t    // NOTE: hey..!! see, 3 is not a magic number, if you think it is, then\n\t    // it's just milliseconds in 3 digits (000-999)\n\t    var appendMilliseconds = ('00' + d.getMilliseconds()).slice(-3);\n\t\n\t    return date + ' ' + time + '.' + appendMilliseconds;\n\t  }\n\t\n\t  function justLogItDude(loggingType, args) {\n\t    var consoleLoggingType = console[loggingType] || console[DEFAULT_LOGGING_TYPE];\n\t    Function.prototype.bind.call(consoleLoggingType, console).apply(console, args);\n\t  }\n\t\n\t  // Function style programming;\n\t  // No mutating params, no state known beforehand\n\t  return function (logToConsoleParams, args) {\n\t    var currentLogLevel = logToConsoleParams.currentLogLevel;\n\t    var loggingType = logToConsoleParams.loggingType;\n\t    var _logToConsoleParams$o = logToConsoleParams.options;\n\t    var options = _logToConsoleParams$o === undefined ? {} : _logToConsoleParams$o;\n\t\n\t\n\t    if (!isLogLevelValid(currentLogLevel)) {\n\t      throw new RangeError('Invalid LogLevel set, Please set a valid LogLevel');\n\t    }\n\t\n\t    if (isNoneLogLevel(currentLogLevel) || !isConsoleDefined() || !isLoggingAllowed(currentLogLevel, loggingType)) {\n\t      return;\n\t    }\n\t\n\t    /////////////////////////////////////////////\n\t    var consoleOptions = [];\n\t\n\t    if (options.showDateTime) {\n\t\n\t      // Better readability than consoleOptions[consoleOptions.length] = value\n\t      consoleOptions.push(getDateTime() + ':');\n\t    }\n\t\n\t    if (options.prefix) {\n\t      consoleOptions.push(options.prefix);\n\t    }\n\t\n\t    justLogItDude(loggingType, [].concat(consoleOptions, _toConsumableArray(args)));\n\t  };\n\t}();\n\t\n\t////////////////////////////////////////////////////////////////////////////////\n\t\n\texports.default = { singelton: singelton, logToConsole: logToConsole };\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** clogy.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8d4da782a80e9ed00147\n **/","export default {\n  get loggingLevels() {\n    return {\n      types: {\n        log: 1,\n        trace: 2,\n        debug: 3,\n        info: 4,\n        warn: 5,\n        error: 6,\n        none: 7\n      },\n      get range() {\n        return {\n          min: this.types.log,\n          max: this.types.none\n        };\n      }\n    };\n  },\n  options: {\n    showDateTime: false,\n    prefix: ''\n  },\n  methods: ['log', 'trace', 'debug', 'info', 'warn', 'error']\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/globalConstants.js\n **/","import GLOBAL_CONSTANTS from './constants/globalConstants';\nimport GLOBAL_UTILITIES from './utilities/globalUtilities';\n\n////////////////////////////////////////////////////////////////////////////////\nclass Loggers {}\n\nGLOBAL_CONSTANTS.methods.forEach((method) => {\n\n  // Not using arrow functions because 'this' will be undefined\n  // (Arrow functions capture the this value of the enclosing context)\n  Loggers.prototype[method] = function(...args) {\n    const logToConsoleParams = {\n      currentLogLevel: this.getLevel(),\n      loggingType: method,\n      options: this.options\n    };\n\n    GLOBAL_UTILITIES.logToConsole(logToConsoleParams, args);\n  };\n});\n////////////////////////////////////////////////////////////////////////////////\n\nclass Clogy extends Loggers {\n  constructor() {\n    super();\n\n    this._level = null;\n    this.options = {};\n\n    this._init();\n  }\n\n  _init() {\n\n    // Set default log level\n    this.setLevel(GLOBAL_CONSTANTS.loggingLevels.types.info);\n\n    ({\n      showDateTime: this.options.showDateTime,\n      prefix: this.options.prefix\n    } = GLOBAL_CONSTANTS.options);\n  }\n\n  getLevel() {\n    return this._level;\n  }\n\n  setLevel(logLevel) {\n    let _logLevel = logLevel;\n\n    // No need of ===, typeof returns a string\n    if (typeof(_logLevel) == 'string') {\n      _logLevel = GLOBAL_CONSTANTS.loggingLevels.types[_logLevel.toLowerCase()];\n    }\n\n    // No need to check if log level is less or more than min and max or invalid\n    // Will be handled when logging\n    this._level = _logLevel;\n  }\n\n  get LEVELS() {\n    return GLOBAL_CONSTANTS.loggingLevels.types;\n  }\n\n  enableAllLevels() {\n    this.setLevel(GLOBAL_CONSTANTS.loggingLevels.types.log);\n  }\n\n  disableAllLevels() {\n    this.setLevel(GLOBAL_CONSTANTS.loggingLevels.types.none);\n  }\n\n  decorator(decoFunc) {\n\n    // No need of ===, typeof returns a string\n    if (typeof(decoFunc) != 'function') {\n      throw new TypeError('Decorator handler should be a function');\n    }\n\n    decoFunc(GLOBAL_UTILITIES.singelton.getInstance(this));\n  }\n}\n\nconst clogy = new Clogy();\n\n////////////////////////////////////////////////////////////////////////////////\n/* clogy Methods only*/\n\n// Not using arrow functions because 'this' will be undefined\n// (Arrow functions capture the this value of the enclosing context)\nclogy.noConflict = function() {\n\n  // No need of ===, typeof returns a string\n  if (typeof(window) != 'undefined' && window.clogy) {\n\n    // it will be deleted because clogy is not a variable, but\n    // a property of the global object i.e. window;\n    // check yourself ('clogy' in window) -> false after deletion\n    delete window.clogy;\n  }\n\n  return this;\n};\n////////////////////////////////////////////////////////////////////////////////\n\nexport default clogy;\n\n// Because of Babel@6\n// Can use plugin: https://www.npmjs.com/package/babel-plugin-add-module-exports\n// Used this soln. instead:\n// http://stackoverflow.com/questions/34736771/webpack-umd-library-return-object-default/34778391#34778391\nmodule.exports = clogy;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import GLOBAL_CONSTANTS from '../constants/globalConstants';\n\nconst singelton = (() => {\n  let instance;\n\n  function createInstance(originalInstance) {\n    return Object.getPrototypeOf(Object.getPrototypeOf(originalInstance));\n  }\n\n  return {\n    getInstance: (originalInstance) => {\n      if (!instance) {\n        instance = createInstance(originalInstance);\n      }\n      return instance;\n    }\n  };\n})();\n\nconst logToConsole = (() => {\n  const DEFAULT_LOGGING_TYPE = 'log';\n\n  function isLogLevelValid(currentLogLevel) {\n    return !!(\n      currentLogLevel &&\n      currentLogLevel >= GLOBAL_CONSTANTS.loggingLevels.range.min &&\n      currentLogLevel <= GLOBAL_CONSTANTS.loggingLevels.range.max\n    );\n  }\n\n  function isNoneLogLevel(currentLogLevel) {\n    return currentLogLevel === GLOBAL_CONSTANTS.loggingLevels.types.none;\n  }\n\n  function isLoggingAllowed(currentLogLevel, loggingType) {\n    return (\n      GLOBAL_CONSTANTS.loggingLevels.types[loggingType] >= currentLogLevel\n    );\n  }\n\n  function isConsoleDefined() {\n\n    // No need of ===, typeof returns a string\n    return typeof(console) != 'undefined';\n  }\n\n  function getDateTime() {\n    const d = new Date();\n    const date = d.toDateString();\n\n    // 0 means first matched string, which will be true always unless someone\n    // overrides the result\n    const time = d.toTimeString().match(/^([0-9]{2}:[0-9]{2}:[0-9]{2})/)[0];\n\n    // NOTE: hey..!! see, 3 is not a magic number, if you think it is, then\n    // it's just milliseconds in 3 digits (000-999)\n    const appendMilliseconds = `00${d.getMilliseconds()}`.slice(-3);\n\n    return `${date} ${time}.${appendMilliseconds}`;\n  }\n\n  function justLogItDude(loggingType, args) {\n    const consoleLoggingType = console[loggingType] || console[DEFAULT_LOGGING_TYPE];\n    Function.prototype.bind.call(consoleLoggingType, console).apply(console, args);\n  }\n\n  // Function style programming;\n  // No mutating params, no state known beforehand\n  return (logToConsoleParams, args) => {\n    const { currentLogLevel, loggingType, options = {} } = logToConsoleParams;\n\n    if (!isLogLevelValid(currentLogLevel)) {\n      throw new RangeError('Invalid LogLevel set, Please set a valid LogLevel');\n    }\n\n    if (\n      isNoneLogLevel(currentLogLevel) ||\n      !isConsoleDefined() ||\n      !isLoggingAllowed(currentLogLevel, loggingType)) {\n      return;\n    }\n\n    /////////////////////////////////////////////\n    const consoleOptions = [];\n\n    if (options.showDateTime) {\n\n      // Better readability than consoleOptions[consoleOptions.length] = value\n      consoleOptions.push(`${getDateTime()}:`);\n    }\n\n    if (options.prefix) {\n      consoleOptions.push(options.prefix);\n    }\n\n    justLogItDude(loggingType, [...consoleOptions, ...args]);\n  };\n})();\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport default { singelton, logToConsole };\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utilities/globalUtilities.js\n **/"],"sourceRoot":""}